const axios = require("axios");

module.exports = {
    name: "ask",
    description: "üí¨ ƒê·∫∑t c√¢u h·ªèi v√† nh·∫≠n c√¢u tr·∫£ l·ªùi t·ª´ AI chatbot.",
    execute: async (bot, msg, args) => {
        const chatId = msg.chat.id;

        // Ki·ªÉm tra c√∫ ph√°p: y√™u c·∫ßu ng∆∞·ªùi d√πng nh·∫≠p c√¢u h·ªèi
        if (args.length < 1) {
            return bot.sendMessage(chatId, "‚ö†Ô∏è Vui l√≤ng nh·∫≠p c√¢u h·ªèi c·ªßa b·∫°n, v√≠ d·ª•: `/ask B·∫°n c√≥ kh·ªèe kh√¥ng?`", { parse_mode: "Markdown" });
        }

        const userQuestion = args.join(" ");
        const apiUrl = `https://api.sumiproject.net/sim?type=ask&ask=${encodeURIComponent(userQuestion)}`;

        try {
            const response = await axios.get(apiUrl);

            // Ki·ªÉm tra n·∫øu API kh√¥ng tr·∫£ v·ªÅ c√¢u tr·∫£ l·ªùi h·ª£p l·ªá
            if (!response.data || !response.data.answer) {
                return bot.sendMessage(chatId, "‚ùå Kh√¥ng th·ªÉ l·∫•y c√¢u tr·∫£ l·ªùi t·ª´ API.", { parse_mode: "Markdown" });
            }

            const botReply = response.data.answer;
            bot.sendMessage(chatId, `ü§ñ **Bot:** ${botReply}`, { parse_mode: "Markdown" });
        } catch (error) {
            console.error("L·ªói khi g·ªçi API ask:", error);
            return bot.sendMessage(chatId, "‚ùå ƒê√£ x·∫£y ra l·ªói khi g·ª≠i c√¢u h·ªèi.", { parse_mode: "Markdown" });
        }
    }
};
