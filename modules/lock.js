const fs = require('fs');

module.exports = {
    name: "lock",
    description: "Kh√≥a chat trong nh√≥m ho·∫∑c k√™nh trong m·ªôt kho·∫£ng th·ªùi gian nh·∫•t ƒë·ªãnh v·ªõi nhi·ªÅu ƒë∆°n v·ªã th·ªùi gian, bao g·ªìm nƒÉm.",
    execute: async (bot, msg, args) => {
        const chatId = msg.chat.id;
        const adminId = 301991;  // Thay b·∫±ng ID admin c·ªßa b·∫°n
        const timeString = args.join(" ");  // L·∫•y th·ªùi gian kh√≥a t·ª´ ƒë·ªëi s·ªë nh·∫≠p v√†o
        
        // Ki·ªÉm tra quy·ªÅn admin
        if (msg.from.id !== adminId) {
            return bot.sendMessage(chatId, "üö´ B·∫°n kh√¥ng ph·∫£i l√† admin, kh√¥ng c√≥ quy·ªÅn th·ª±c hi·ªán l·ªánh n√†y.");
        }

        // Ki·ªÉm tra n·∫øu kh√¥ng c√≥ ƒë·ªëi s·ªë
        if (!timeString) {
            return bot.sendMessage(chatId, "üö´ B·∫°n ch∆∞a nh·∫≠p th·ªùi gian kh√≥a.");
        }

        // H√†m chuy·ªÉn ƒë·ªïi ƒë∆°n v·ªã th·ªùi gian
        const convertTimeToSeconds = (timeString) => {
            const regex = /(\d+)(nƒÉm|tu·∫ßn|ng√†y|gi·ªù|ph√∫t)/g;
            let totalSeconds = 0;
            let match;

            while ((match = regex.exec(timeString)) !== null) {
                const value = parseInt(match[1]);
                const unit = match[2];

                if (unit === "nƒÉm") totalSeconds += value * 365 * 24 * 60 * 60;  // NƒÉm (365 ng√†y)
                if (unit === "tu·∫ßn") totalSeconds += value * 7 * 24 * 60 * 60;  // Tu·∫ßn
                if (unit === "ng√†y") totalSeconds += value * 24 * 60 * 60;  // Ng√†y
                if (unit === "gi·ªù") totalSeconds += value * 60 * 60;  // Gi·ªù
                if (unit === "ph√∫t") totalSeconds += value * 60;  // Ph√∫t
            }

            return totalSeconds;
        };

        // Chuy·ªÉn th·ªùi gian t·ª´ chu·ªói sang gi√¢y
        const timeInSeconds = convertTimeToSeconds(timeString);

        if (isNaN(timeInSeconds) || timeInSeconds <= 0) {
            return bot.sendMessage(chatId, "üö´ Th·ªùi gian kh√≥a kh√¥ng h·ª£p l·ªá. Vui l√≤ng s·ª≠ d·ª•ng c√°c ƒë∆°n v·ªã nh∆∞ nƒÉm, tu·∫ßn, ng√†y, gi·ªù, ph√∫t.");
        }

        // G·ª≠i th√¥ng b√°o kh√≥a chat
        await bot.sendMessage(chatId, `üîí Chat ƒë√£ b·ªã kh√≥a trong th·ªùi gian ${timeString}. Kh√¥ng ai c√≥ th·ªÉ g·ª≠i tin nh·∫Øn trong th·ªùi gian n√†y.`);
        
        // Kh√≥a chat trong nh√≥m ho·∫∑c k√™nh
        try {
            await bot.setChatPermissions(chatId, {
                can_send_messages: false,
                can_send_media_messages: false,
                can_send_other_messages: false,
                can_add_web_page_previews: false,
            });

            // Sau th·ªùi gian kh√≥a, m·ªü l·∫°i chat
            setTimeout(async () => {
                await bot.setChatPermissions(chatId, {
                    can_send_messages: true,
                    can_send_media_messages: true,
                    can_send_other_messages: true,
                    can_add_web_page_previews: true,
                });
                bot.sendMessage(chatId, "üîì Chat ƒë√£ ƒë∆∞·ª£c m·ªü l·∫°i.");
            }, timeInSeconds * 1000);  // Th·ªùi gian kh√≥a t√≠nh b·∫±ng gi√¢y
        } catch (error) {
            console.error(error);
            bot.sendMessage(chatId, "üö´ Kh√¥ng th·ªÉ kh√≥a chat. Vui l√≤ng th·ª≠ l·∫°i.");
        }
    }
};
